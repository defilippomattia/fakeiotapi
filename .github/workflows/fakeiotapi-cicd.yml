name: fakeiotapi CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up PostgreSQL container
        run: |
          docker run --name postgres-container  \
            -p ${{ secrets.POSTGRES_PORT }}:5432 \
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            -d postgres:15.3
          sleep 10

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize PostgreSQL container
        run: |
          docker cp ${{ github.workspace }}/scripts/. postgres-container:/scripts
          docker exec postgres-container psql -U fakeiot -d fakeiot -f /scripts/init.sql
        shell: bash

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Build and test backend
        working-directory: ./backend
        run: |
          go mod download
          go build -v

      - name: Run tests
        working-directory: ./backend
        run: |
          go test -v ./...

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy using rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete --exclude=".git"
          path: ./
          remote_path: /home/ubuntu/myapp
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.USER_NAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into server and run commands
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/myapp
            ls -lah
            cp /home/ubuntu/mycerts/archive/fakeiotapi.xyz/privkey1.pem /home/ubuntu/myapp/frontend/privkey.pem
            cp /home/ubuntu/mycerts/archive/fakeiotapi.xyz/fullchain1.pem /home/ubuntu/myapp/frontend/fullchain.pem
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker-compose build
            sudo docker-compose up -d
          '
